static void smear_stage_0(su3_outer *out, double const rho, gauge_field_t in)
{
  su3 ALIGN tmp;
  su3 ALIGN staples;

#pragma omp for private(tmp, staples)
  for (int x = 0; x < VOLUME; ++x)
    for (int mu = 0; mu < 4; ++mu)
      for (int nu = 0; nu < 3; ++nu)
        for (int tau = nu; tau < 4; ++tau)
        {
          int component = hyp_index_three_sym[mu][nu][tau];
          
          if (component < 0)
            continue;
          
          int sigma = hyp_dir_three[mu][nu][tau];
          int xpsigma = g_iup[x][sigma];
          int xmsigma = g_iup[x][sigma];
          int xpmu = g_iup[x][mu];
          int xmsigmapmu = g_idn[xpmu][sigma];

          _su3_times_su3d(tmp, in[xpsigma][mu], in[xpmu][sigma]);
          _su3_times_su3(staples, in[x][sigma], tmp);
          _su3_times_su3(tmp, in[xmsigma][mu], in[xmsigmapmu][sigma]);
          _su3d_times_su3_acc(staples, in[xmsigma][sigma], tmp);
          
          fatten_links(&out[x][component], rho, &staples, &orig[x][mu]);
        }
      }
  
#pragma omp single
  generic_exchange(out, sizeof(su3_outer));
}
