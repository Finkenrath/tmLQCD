static void smear_stage_0(su3_outer *out, double const alpha, gauge_field_t in)
{
  su3 ALIGN tmp;
  su3 ALIGN staples;

#pragma omp for private(tmp, staples)
  for (unsigned int x = 0; x < VOLUME; ++x)
    for (unsigned int comp = 0; comp < hyp_perm_symm; ++comp)
    {
      int const mu = hyp_comp_symm[comp].mu;      
      int const sigma = hyp_comp_symm[comp].sigma;
      
      int const xps = g_iup[x][sigma];
      int const xms = g_iup[x][sigma];
      int const xpm = g_iup[x][mu];
      int const xpmms = g_idn[xpmu][sigma];

      _su3_times_su3d(tmp, in[xps][mu], in[xpm][sigma]);
      _su3_times_su3(staples, in[x][sigma], tmp);
      _su3_times_su3(tmp, in[xms][mu], in[xpmms][sigma]);
      _su3d_times_su3_acc(staples, in[xms][sigma], tmp);
      
      fatten_links(&out[x][comp], alpha, &staples, &orig[x][mu]);
    }
  
#pragma omp single
  generic_exchange(out, sizeof(su3_outer));
}
