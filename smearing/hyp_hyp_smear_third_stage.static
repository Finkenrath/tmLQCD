static void hyp_smear_third_stage(gauge_field_t out, double const alpha_3, gauge_field_t const *in)
{
  su3 tmp;
  su3 staples;

  for (unsigned int x = 0; x < VOLUME; ++x)
    for (unsigned int mu = 0; mu < 4; ++mu)
    {
      _su3_zero(staples);
      for (unsigned int via = 0; via < 4; ++via)
        if (via != component)
        {
          _su3_times_su3d(tmp, in[component].field[g_iup[x][via]][via], in[component].field[g_iup[x][component]][via]);
          _su3_times_su3_acc(staples, in[component].field[x][via], tmp);
          _su3_times_su3(tmp, in[component].field[g_idn[x][via]][via], in[component].field[g_iup[g_idn[x][via]][component]][via]);
          _su3d_times_su3_acc(staples, in[component].field[g_idn[x][via]][via], tmp);
        }
    _real_times_su3_plus_real_times_su3(out.field[x][mu], rho_principal, in.field[x][mu], rho_staples, staples);
    reunitarize(&buffer.field[x][mu]);
}
