static void construct_Sigma_2(stout_notes_outer *trace_out, double const rho_3, su3_outer const *V_2, stout_notes_tuple *trace_in)
{
  su3 ALIGN t1;
  su3 ALIGN t2;
  #pragma omp for private(t1, t2)
  for (unsigned int x = 0; x < VOLUME; ++x)
    for (unsigned int mu = 0; mu < 4; ++mu)
      for (unsigned int nu = 0; nu < 4; ++nu)
      {
        /* NOTE We need to calculate Sigma_{mu,nu} and Sigma_{nu,mu} both! */
        /* That means we'll have to explicitly skip only nu == mu. */

        if (nu == mu)
          continue;
        
        /* Calculate the right index in the 'outer' counting */
        unsigned int I1_mu_nu = mu * 3 + ((nu > mu) ? (nu - 1) : nu);
        unsigned int I1_nu_mu = nu * 3 + ((mu > nu) ? (mu - 1) : mu);
        
        /* Prefetch the indices */
        unsigned int xmnu = g_idn[x][nu];
        unsigned int xpnu = g_iup[x][nu];
        unsigned int xpmu = g_iup[x][mu];
        unsigned int xmnu_pmu = g_idn[ xpmu ][nu];
        
        /* Line 1 */
        _su3d_times_su3(t1, V2[xpnu][I1_mu_nu], trace_in[x][nu].Z);
        _su3_times_su3(trace_out[x][I1_mu_nu].Sigma, V2[xpmu][I1_nu_mu], t1);
        
        /* Line 2 */
        _su3_times_su3(t1, trace_in[xmnu][mu].Z, V2[xmnu][I1_nu_mu]);
        _su3d_times_su3_acc(trace_out[x][I1_mu_nu].Sigma, V2[xmnu_pmu][I1_nu_mu], t1);
        
        /* Line 3 */
        _su3_times_su3d(t1, V2[xmnu_pmu][I1_nu_mu], V2[x][I1_mu_nu]);
        _su3_times_su3(t2, V2[xmnu][I1_mu_nu], t1);
        _su3_times_su3(t1, trace_in[xmnu][nu].Z, t2);
        _su3d_times_su3(t2, V2[x][I1_mu_nu], t1);
        _su3_refac_acc(trace_out[x][I1_mu_nu].Sigma, -1.0, t2);
        
        /* Line 4 */
        _su3_times_su3d(t1, trace_in[xpmu][nu].Z, V2[x][I1_mu_nu]);
        _su3_times_su3(t2, V2[xpmu][I1_mu_nu], t1);
        _su3_times_su3(t1,V2[x][I1_nu_mu] , t2);
        _su3d_times_su3(t2, V2[x][I1_mu_nu], t1);
        _su3_refac_acc(trace_out[x][I1_mu_nu].Sigma, -1.0, t2);       
        
        /* Line 5 */
        _su3_times_su3d(t1, trace_in[xpnu][mu].Z, V2[x][I1_nu_mu]);
        _su3_times_su3_acc(trace_out[x][I1_mu_nu].Sigma, V2[xpmu][I1_nu_mu], t1);
        
        /* Line 6 */
        _su3d_times_su3(t1, V2[xmnu][I1_mu_nu], V2[xmnu][I1_nu_mu]);
        _su3_times_su3_acc(trace_out[x][I1_mu_nu].Sigma, trace_in[xmnu_pmu][nu].Z, t1);
        
        _su3_refac_acc(trace_out[x][I1_mu_nu].Sigma, rho_3, trace_out[x][I1_mu_nu].Sigma);
      }
}
