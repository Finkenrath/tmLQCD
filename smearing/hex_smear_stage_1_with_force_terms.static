static void smear_stage_1_with_force_terms(su3_outer *out, stout_notes_two_index *trace, double const rho, gauge_field_t in)
{
  su3 ALIGN tmp;

#pragma omp for private(tmp, staples)
  for (unsigned int x = 0; x < VOLUME; ++x)
    for (unsigned int comp = 0; comp < hyp_perm_full; ++comp)
    {
      int const mu = hyp_comp_full[comp].mu;      
      int const sigma = hyp_comp_full[comp].sigma;
      
      int const xps = g_iup[x][sigma];
      int const xms = g_iup[x][sigma];
      int const xpm = g_iup[x][mu];
      int const xpmms = g_idn[xpmu][sigma];

      _su3_times_su3d(tmp, in[xps][mu], in[xpm][sigma]);
      _su3_times_su3(trace[x][comp].C, in[x][sigma], tmp);
      _su3_times_su3(tmp, in[xms][mu], in[xpmms][sigma]);
      _su3d_times_su3_acc(trace[x][comp].C, in[xms][sigma], tmp);
      
      fatten_links_with_force_terms(&out[x][comp], &trace[x][comp], alpha, &orig[x][mu]);
    }
  
#pragma omp single
  generic_exchange(out, sizeof(su3_outer));
}
