static void construct_Sigma_0(gauge_field_t Sigma, double const alpha, gauge_field_t const U, stout_notes_three_index *trace_in)
{
  su3 ALIGN t1;
  su3 ALIGN t2;
  
  #pragma omp for private(t1, t2)
  for (unsigned int x = 0; x < VOLUME; ++x)
    for (unsigned int comp = 0; comp < hyp_perm_full; ++comp)
    { 
      unsigned int mu = hyp_comp_full[comp].mu;
                  unsigned int nu = hyp_comp_full[comp].nu;
                  unsigned int cnrs = hyp_staple_full[comp].cnrs;

      /* Prefetch the indices */
      unsigned int xmn   = g_idn[x][nu];
      unsigned int xpn   = g_iup[x][nu];
      unsigned int xpm   = g_iup[x][mu];
      unsigned int xpmmn = g_idn[xpm][nu];
      
      if ((comp % 6) == 0)
        _su3_zero(trace_out[x][mu]);
                  
      /* Line 1 */
      _su3d_times_su3(t1, U[xpn][mu], trace_in[x][cnrs].Z);
      _su3_times_su3_acc(Sigma[x][mu], U[xpm][nu], t1);
      
      /* Line 2 */
      _su3_times_su3(t1, trace_in[xmn][comp].Z, U[xmn][nu]);
      _su3d_times_su3_acc(Sigma[x][mu], U[xpmmn][nu], t1);
      
      /* Line 3 */
      _su3_times_su3d(t1, U[xpmmn][nu], U[x][mu]);
      _su3_times_su3(t2, U[xmn][mu], t1);
      _su3_times_su3(t1, trace_in[xmn][cnrs].Z, t2);
      _su3d_times_su3(t2, U[x][mu], t1);
      _su3_refac_acc(Sigma[x][mu], -1.0, t2);
      
      /* Line 4 */
      _su3_times_su3d(t1, trace_in[xpm][cnrs].Z, U[x][mu]);
      _su3_times_su3(t2, U[xpm][mu], t1);
      _su3_times_su3(t1,U[x][nu] , t2);
      _su3d_times_su3(t2, U[x][mu], t1);
      _su3_refac_acc(Sigma[x][mu], -1.0, t2);       
      
      /* Line 5 */
      _su3_times_su3d(t1, trace_in[xpn][comp].Z, U[x][nu]);
      _su3_times_su3_acc(Sigma[x][mu], U[xpm][nu], t1);
      
      /* Line 6 */
      _su3d_times_su3(t1, U[xmn][mu], U[xmn][nu]);
      _su3_times_su3_acc(Sigma[x][mu], trace_in[xpmmn][cnrs].Z, t1);
      
      if ((comp % 6) == 5)
        _su3_refac_acc(Sigma[x][mu], alpha, Sigma[x][mu]);
    }
}