static void smear_stage_3(gauge_field_t out, double const alpha, su3_outer *in, gauge_field_t const orig)
{
  su3 ALIGN tmp;
  su3 ALIGN staples;

#pragma omp for private(tmp, staples)
  for (unsigned int x = 0; x < VOLUME; ++x)
    for (unsigned int comp = 0; comp < hyp_perm_symm; ++comp)
    {    
      int const mu  = hi2[comp].mu;
      int const nu  = hi2[comp].nu;
      int const cnm = hp2[comp].cnm;
      
      int const xpm   = g_iup[x][mu];
      int const xmn   = g_idn[x][nu];
      int const xpn   = g_iup[x][nu];
      int const xpmmn = g_idn[xpm][nu];

      if ((comp % 3) == 0)
        _su3_zero(staples);
      
      _su3_times_su3d(tmp, in[xpn][comp], in[xpm][cnm]);
      _su3_times_su3_acc(staples, in[x][cnm], tmp);
      _su3_times_su3(tmp, in[xmn][comp], in[xpmmn][cnm]);
      _su3d_times_su3_acc(staples, in[xmn][cnm], tmp);

      if ((comp % 3) == 2)
        fatten_links(&out[x][mu], alpha, &staples, &orig[x][mu]);
    }

#pragma omp single  
  generic_exchange(out, sizeof(su3_outer));
}
